package main

import "fmt"

func main() {
fmt.Println(fibonacci())
}

func fibonacci() int {
	var totalSum int
	var nextNumber int
	var fibonacci []int
	var i int
	for nextNumber < 4000000 {
		if i < 2 {
			nextNumber = i+1 // needed to build the initial array
		} else {
			fibonacciLength := len(fibonacci) - 1
			nextNumber = fibonacci[fibonacciLength] + fibonacci[fibonacciLength-1]
		}
		fibonacci = append(fibonacci,nextNumber)
		if isEven(nextNumber) {
			totalSum += nextNumber
		}
		i++
	}
	return totalSum
}

func isEven(x int) bool {
	return x % 2 == 0
}

/* Even Fibonacci numbers
Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. */